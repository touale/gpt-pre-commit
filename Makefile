CHECK_DIRS := src

.PHONY: dist clean clean-pyc clean-build clean-test test-all test dist style lint release help

help: ## Display this help screen
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'


install-pre:
	pip install poetry
	poetry config virtualenvs.in-project true

install: ## Install all project dependencies including development packages.
	make install-pre
	poetry install
	poetry run pre-commit install


clean: clean-build clean-pyc clean-test clean-lint ## Remove all files generated by builds and tests.

clean-pyc:
	find . -name '*.pyc' -exec rm -f {} +
	find . -name '*.pyo' -exec rm -f {} +
	find . -name '*~' -exec rm -f {} +
	find . -name '__pycache__' -exec rm -fr {} +

clean-build:
	rm -fr build/
	rm -fr dist/
	rm -fr .eggs/
	find . -name '*.egg-info' -exec rm -fr {} +
	find . -name '*.egg' -exec rm -f {} +

clean-test:
	rm -f .coverage
	rm -fr htmlcov/
	rm -fr .pytest_cache
	rm -f report.xml
	rm -f cov.xml

clean-lint:
	rm -fr .mypy_cache
	rm -fr .ruff_cache

style: ## Auto-fix and format the code using ruff.
	poetry run ruff check $(CHECK_DIRS) --fix
	poetry run ruff format $(CHECK_DIRS)

lint: ## Check for style and type violations using ruff and mypy.
	poetry run ruff check $(CHECK_DIRS) --fix
	poetry run mypy $(CHECK_DIRS)
